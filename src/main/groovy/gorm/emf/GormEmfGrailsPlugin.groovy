package gorm.emf

import gorm.emf.extensions.EObjectExtensions
import gorm.emf.extensions.EReferenceExtensions

import gorm.emf.extensions.registry.DynamicExtensionRegistry
import grails.plugins.*

class GormEmfGrailsPlugin extends Plugin {

    // the version or versions of Grails the plugin is designed for
    def grailsVersion = "3.2.9 > *"
    // resources that are excluded from plugin packaging
    def pluginExcludes = [
        "grails-app/views/error.gsp"
    ]

    // TODO Fill in these fields
    def title = "GORM for Eclipse Modeling Framework (EMF)" // Headline display name of the plugin
    def author = "Lucas Weyne"
    def authorEmail = "weynelucas@gmail.com"
    def description = '''\
A set of methods and services to perform persistence like GORM to Java classes generated by Eclipse Modeling Framework (EMF).
'''
    def profiles = ['web']

    // URL to the plugin's documentation
    def documentation = "http://grails.org/plugin/gorm-emf"

    // Extra (optional) plugin metadata

    // License: one of 'APACHE', 'GPL2', 'GPL3'
//    def license = "APACHE"

    // Details of company behind the plugin (if there is one)
//    def organization = [ name: "My Company", url: "http://www.my-company.com/" ]

    // Any additional developers beyond the author specified above.
//    def developers = [ [ name: "Joe Bloggs", email: "joe@bloggs.net" ]]

    // Location of the plugin's issue tracker.
//    def issueManagement = [ system: "JIRA", url: "http://jira.grails.org/browse/GPMYPLUGIN" ]

    // Online location of the plugin's browseable source code.
//    def scm = [ url: "http://svn.codehaus.org/grails-plugins/" ]

    Closure doWithSpring() { {->
        eObjectPersistenceService(EObjectMongoPersistenceService) {
            mongo = ref('mongo')
        }

        eObjectService(EObjectService) {
            eObjectWrapper = ref('eObjectWrapper')
        }

        // Extensions beans
        eReferenceExtensions(EReferenceExtensions) {
            eObjectService = ref('eObjectService')
        }
        eObjectExtensions(EObjectExtensions) {
            eObjectService = ref('eObjectService')
            eObjectPersistenceService = ref('eObjectPersistenceService')
        }
    } }

    void doWithDynamicMethods() {
        DynamicExtensionRegistry.enableGlobally()
    }

    void doWithApplicationContext() {
    }

    void onChange(Map<String, Object> event) {
    }

    void onConfigChange(Map<String, Object> event) {
    }

    void onShutdown(Map<String, Object> event) {
    }
}
